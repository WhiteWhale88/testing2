<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="2" skipped="0" tests="2" time="1.234" timestamp="2023-11-28T18:09:51.045513" hostname="haidarova"><testcase classname="src.tests.test_all.TestAnalysis" name="test_calculate_statistics" file="src\tests\test_all.py" line="10" time="0.002"><failure message="TypeError: TestAnalysis.test_calculate_statistics() takes 0 positional arguments but 1 was given">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_runtest_hook.&lt;locals&gt;.&lt;lambda&gt; at 0x000002B814AE1BD0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: "Callable[[], TResult]",
        when: "Literal['collect', 'setup', 'call', 'teardown']",
        reraise: Optional[
            Union[Type[BaseException], Tuple[Type[BaseException], ...]]
        ] = None,
    ) -&gt; "CallInfo[TResult]":
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: Optional[TResult] = func()

C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\runner.py:262: in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\pluggy\_hooks.py:493: in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\pluggy\_manager.py:115: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\runner.py:177: in pytest_runtest_call
    raise e
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\runner.py:169: in pytest_runtest_call
    item.runtest()
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:1792: in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\pluggy\_hooks.py:493: in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\pluggy\_manager.py:115: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

pyfuncitem = &lt;Function test_calculate_statistics&gt;

    @hookimpl(trylast=True)
    def pytest_pyfunc_call(pyfuncitem: "Function") -&gt; Optional[object]:
        testfunction = pyfuncitem.obj
        if is_async_function(testfunction):
            async_warn_and_skip(pyfuncitem.nodeid)
        funcargs = pyfuncitem.funcargs
        testargs = {arg: funcargs[arg] for arg in pyfuncitem._fixtureinfo.argnames}
&gt;       result = testfunction(**testargs)
E       TypeError: TestAnalysis.test_calculate_statistics() takes 0 positional arguments but 1 was given

C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:194: TypeError</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="src.tests.test_all.TestAnalysis" name="test_passing" file="src\tests\test_all.py" line="7" time="0.001"><failure message="TypeError: TestAnalysis.test_passing() takes 0 positional arguments but 1 was given">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_runtest_hook.&lt;locals&gt;.&lt;lambda&gt; at 0x000002B814B4F0A0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: "Callable[[], TResult]",
        when: "Literal['collect', 'setup', 'call', 'teardown']",
        reraise: Optional[
            Union[Type[BaseException], Tuple[Type[BaseException], ...]]
        ] = None,
    ) -&gt; "CallInfo[TResult]":
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: Optional[TResult] = func()

C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\runner.py:262: in &lt;lambda&gt;
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\pluggy\_hooks.py:493: in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\pluggy\_manager.py:115: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\runner.py:177: in pytest_runtest_call
    raise e
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\runner.py:169: in pytest_runtest_call
    item.runtest()
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:1792: in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\pluggy\_hooks.py:493: in __call__
    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)
C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\pluggy\_manager.py:115: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

pyfuncitem = &lt;Function test_passing&gt;

    @hookimpl(trylast=True)
    def pytest_pyfunc_call(pyfuncitem: "Function") -&gt; Optional[object]:
        testfunction = pyfuncitem.obj
        if is_async_function(testfunction):
            async_warn_and_skip(pyfuncitem.nodeid)
        funcargs = pyfuncitem.funcargs
        testargs = {arg: funcargs[arg] for arg in pyfuncitem._fixtureinfo.argnames}
&gt;       result = testfunction(**testargs)
E       TypeError: TestAnalysis.test_passing() takes 0 positional arguments but 1 was given

C:\Users\inesy\AppData\Local\Programs\Python\Python310\lib\site-packages\_pytest\python.py:194: TypeError</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase></testsuite></testsuites>